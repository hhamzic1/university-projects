==6589== Memcheck, a memory error detector
==6589== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6589== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6589== Command: /rhome/h/hhamzic1/workspace/TP/T2/Z1/.runme
==6589== Parent PID: 6582
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108D55: ProstiBrojeviUOpsegu(int, int) (main.cpp:28)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108CC9: DaLiJeProst(int) (main.cpp:8)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108CD6: DaLiJeProst(int) (main.cpp:9)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108CE0: DaLiJeProst(int) (main.cpp:9)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108CFA: DaLiJeProst(int) (main.cpp:11)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== Conditional jump or move depends on uninitialised value(s)
==6589==    at 0x108D07: DaLiJeProst(int) (main.cpp:14)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== 
==6589== Process terminating with default action of signal 1 (SIGHUP)
==6589==    at 0x108CFC: DaLiJeProst(int) (main.cpp:14)
==6589==    by 0x108D60: ProstiBrojeviUOpsegu(int, int) (main.cpp:30)
==6589==    by 0x108E20: main (main.cpp:44)
==6589== 
==6589== HEAP SUMMARY:
==6589==     in use at exit: 4,096 bytes in 1 blocks
==6589==   total heap usage: 13 allocs, 12 frees, 81,916 bytes allocated
==6589== 
==6589== LEAK SUMMARY:
==6589==    definitely lost: 0 bytes in 0 blocks
==6589==    indirectly lost: 0 bytes in 0 blocks
==6589==      possibly lost: 0 bytes in 0 blocks
==6589==    still reachable: 4,096 bytes in 1 blocks
==6589==         suppressed: 0 bytes in 0 blocks
==6589== Reachable blocks (those to which a pointer was found) are not shown.
==6589== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==6589== 
==6589== For counts of detected and suppressed errors, rerun with: -v
==6589== Use --track-origins=yes to see where uninitialised values come from
==6589== ERROR SUMMARY: 107947 errors from 6 contexts (suppressed: 0 from 0)
